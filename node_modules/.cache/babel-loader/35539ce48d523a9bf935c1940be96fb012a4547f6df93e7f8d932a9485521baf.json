{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorla\\\\Documents\\\\d2rotations\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport { verbose, setApiKey, loadDefs, getInventoryItemDef, includeTables, getLatestCachedVersion } from \"@d2api/manifest-web\";\nimport { useEffect, useState } from 'react';\nimport Daily from './components/Daily';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport Weekly from './components/Weekly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manifest = require(\"./services/manifestChecker\");\nconst keys = require(\"./config/keys.json\");\nconst neededManifestDefs = require(\"./data/neededManifestDefs.json\");\nfunction App() {\n  _s();\n  verbose();\n  setApiKey(keys.apiKey);\n  includeTables(neededManifestDefs.tablesNeeded);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const manifestLoader = async () => {\n      // checks the API for the current version.\n      // loads our cached copy if it's up to date, or downloads a new one from bungie\n      await loadDefs();\n      const kindledOrchid = getInventoryItemDef(2575506895);\n      console.log(\"item \" + (kindledOrchid === null || kindledOrchid === void 0 ? void 0 : kindledOrchid.displayProperties.name));\n      await getLatestCachedVersion(\"en\");\n    };\n    manifestLoader().catch(console.error);\n    // setIsLoaded(true);\n    console.log(\"LATEST=\" + getLatestCachedVersion(\"en\"));\n  }, []);\n  function renderRoutes() {\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: \"\\\"loading manifest...\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weekly\",\n          element: /*#__PURE__*/_jsxDEV(Weekly, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/daily\",\n          element: /*#__PURE__*/_jsxDEV(Daily, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), renderRoutes()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e/1lVN3R6kIvuSIAmUIHNmZXQsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","verbose","setApiKey","loadDefs","getInventoryItemDef","includeTables","getLatestCachedVersion","useEffect","useState","Daily","Dashboard","Header","Weekly","jsxDEV","_jsxDEV","manifest","require","keys","neededManifestDefs","App","_s","apiKey","tablesNeeded","isLoaded","setIsLoaded","manifestLoader","kindledOrchid","console","log","displayProperties","name","catch","error","renderRoutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/src/App.tsx"],"sourcesContent":["import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport {\n  verbose,\n  setApiKey,\n  loadDefs,\n  getInventoryItemDef,\n  includeTables,\n  getLatestCachedVersion\n} from \"@d2api/manifest-web\";\nimport { useEffect, useState } from 'react';\n\nimport Daily from './components/Daily';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport Weekly from './components/Weekly';\n\nconst manifest = require(\"./services/manifestChecker\");\nconst keys = require(\"./config/keys.json\");\nconst neededManifestDefs = require(\"./data/neededManifestDefs.json\");\n\nfunction App() {\n  verbose();\n  setApiKey(keys.apiKey);\n  includeTables(neededManifestDefs.tablesNeeded);\n  const [isLoaded, setIsLoaded] = useState(false);\n  \n  useEffect(() => {\n    const manifestLoader = async () => {\n      // checks the API for the current version.\n      // loads our cached copy if it's up to date, or downloads a new one from bungie\n      await loadDefs();\n    \n      const kindledOrchid = getInventoryItemDef(2575506895);\n      console.log(\"item \" + kindledOrchid?.displayProperties.name);\n      await getLatestCachedVersion(\"en\");\n    }\n\n    manifestLoader().catch(console.error);\n    // setIsLoaded(true);\n    console.log(\"LATEST=\" + getLatestCachedVersion(\"en\"));\n  }, []);\n\n  function renderRoutes() {\n    if (!isLoaded) {\n      return (\n        <div className=\"info\">\n          \"loading manifest...\"\n        </div>\n        \n      );\n    } else {\n      return (\n        <Routes>\n          <Route path=\"/\" element={<Dashboard/>} />\n          <Route path=\"/weekly\" element={<Weekly />} />\n          <Route path=\"/daily\" element={<Daily />}/>\n          {/* <Route path=\"/nightfall\" element={<Nightfall />}/> */}\n          {/* <Route path=\"/raiddungeon\" element={<RaidDungeon />}/> */}\n          {/* <Route path=\"/vendors\" element={<Vendors />}/> */}\n          {/* <Route path=\"/other\" element={<Other />}/> */}\n          {/* <Route path=\"/calendar\" element={<Calendar />}/> */}\n        </Routes>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        {renderRoutes()}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}