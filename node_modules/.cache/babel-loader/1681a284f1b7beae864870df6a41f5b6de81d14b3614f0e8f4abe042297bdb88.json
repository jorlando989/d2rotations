{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorla\\\\Documents\\\\d2rotations\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { getLatestCachedVersion, includeTables, loadDefs, setApiKey, verbose } from \"@d2api/manifest-web\";\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { DefsProvider } from \"./components/DefsProvider\";\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keys = require(\"./config/keys.json\");\nconst neededManifestDefs = require(\"./data/neededManifestDefs.json\");\nfunction App() {\n  _s();\n  verbose();\n  setApiKey(keys.apiKey);\n  includeTables(neededManifestDefs.tablesNeeded);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const manifestLoader = async () => {\n      // checks the API for the current version.\n      // loads our cached copy if it's up to date, or downloads a new one from bungie\n      await loadDefs();\n      await getLatestCachedVersion(\"en\");\n    };\n    manifestLoader().catch(console.error).then(() => {\n      setIsLoaded(true);\n    });\n  }, []);\n\n  // function renderRoutes() {\n  //   if (!isLoaded) {\n  //     return (\n  //       <div className=\"info\">\n  //         loading manifest...\n  //       </div>\n\n  //     );\n  //   } else {\n  //     return (\n  //       <Routes>\n  //         <Route path=\"/\" element={<Dashboard/>} />\n  //         <Route path=\"/weekly\" element={<Weekly />} />\n  //         <Route path=\"/daily\" element={<Daily />}/>\n  //         <Route path=\"/nightfall\" element={<Nightfall />}/>\n  //         <Route path=\"/raiddungeon\" element={<RaidDungeon />}/>\n  //         {/* <Route path=\"/vendors\" element={<Vendors />}/> */}\n  //         {/* <Route path=\"/other\" element={<Other />}/> */}\n  //         {/* <Route path=\"/calendar\" element={<Calendar />}/> */}\n  //       </Routes>\n  //     );\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DefsProvider, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), renderRoutes()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e/1lVN3R6kIvuSIAmUIHNmZXQsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getLatestCachedVersion","includeTables","loadDefs","setApiKey","verbose","useEffect","useState","BrowserRouter","DefsProvider","Header","jsxDEV","_jsxDEV","keys","require","neededManifestDefs","App","_s","apiKey","tablesNeeded","isLoaded","setIsLoaded","manifestLoader","catch","console","error","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderRoutes","_c","$RefreshReg$"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/src/App.tsx"],"sourcesContent":["import {\n  getLatestCachedVersion, includeTables, loadDefs, setApiKey, verbose\n} from \"@d2api/manifest-web\";\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\n\nimport Daily from './components/Daily';\nimport Dashboard from './components/Dashboard';\nimport { DefsProvider } from \"./components/DefsProvider\";\nimport Header from './components/Header';\nimport Nightfall from './components/Nightfall';\nimport RaidDungeon from \"./components/RaidDungeon\";\nimport Weekly from './components/Weekly';\n\nconst keys = require(\"./config/keys.json\");\nconst neededManifestDefs = require(\"./data/neededManifestDefs.json\");\n\nfunction App() {\n  verbose();\n  setApiKey(keys.apiKey);\n  includeTables(neededManifestDefs.tablesNeeded);\n  const [isLoaded, setIsLoaded] = useState(false);\n  \n  useEffect(() => {\n    const manifestLoader = async () => {\n      // checks the API for the current version.\n      // loads our cached copy if it's up to date, or downloads a new one from bungie\n      await loadDefs();\n      await getLatestCachedVersion(\"en\");\n    }\n\n    manifestLoader().catch(console.error).then(() => {setIsLoaded(true)});\n  }, []);\n\n  // function renderRoutes() {\n  //   if (!isLoaded) {\n  //     return (\n  //       <div className=\"info\">\n  //         loading manifest...\n  //       </div>\n        \n  //     );\n  //   } else {\n  //     return (\n  //       <Routes>\n  //         <Route path=\"/\" element={<Dashboard/>} />\n  //         <Route path=\"/weekly\" element={<Weekly />} />\n  //         <Route path=\"/daily\" element={<Daily />}/>\n  //         <Route path=\"/nightfall\" element={<Nightfall />}/>\n  //         <Route path=\"/raiddungeon\" element={<RaidDungeon />}/>\n  //         {/* <Route path=\"/vendors\" element={<Vendors />}/> */}\n  //         {/* <Route path=\"/other\" element={<Other />}/> */}\n  //         {/* <Route path=\"/calendar\" element={<Calendar />}/> */}\n  //       </Routes>\n  //     );\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n      <DefsProvider>\n        <BrowserRouter>\n          <Header />\n          {renderRoutes()}\n        </BrowserRouter>\n      </DefsProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SACEA,sBAAsB,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAC9D,qBAAqB;AAC5B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAuB,kBAAkB;AAC/D,OAAO,WAAW;AAIlB,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKzC,MAAMC,IAAI,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC1C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAEpE,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbZ,OAAO,EAAE;EACTD,SAAS,CAACS,IAAI,CAACK,MAAM,CAAC;EACtBhB,aAAa,CAACa,kBAAkB,CAACI,YAAY,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC;MACA;MACA,MAAMnB,QAAQ,EAAE;MAChB,MAAMF,sBAAsB,CAAC,IAAI,CAAC;IACpC,CAAC;IAEDqB,cAAc,EAAE,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,MAAM;MAACL,WAAW,CAAC,IAAI,CAAC;IAAA,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA,CAACH,YAAY;MAAAmB,QAAA,eACXhB,OAAA,CAACJ,aAAa;QAAAoB,QAAA,gBACZhB,OAAA,CAACF,MAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EACTC,YAAY,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEV;AAACf,EAAA,CAnDQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}