{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { getDestinyManifest } from \"bungie-api-ts/destiny2\";\nimport { allTableNames } from \"./generated-data.js\";\nimport { getDestinyManifestComponent } from \"bungie-api-ts/destiny2\";\nexport * from \"./generated-funcs.js\";\nexport { emptyTables, defLanguages } from \"./generated-data.js\";\nexport var isVerbose = false;\n/**\r\n * run this if you love console logs\r\n */\nexport function verbose() {\n  isVerbose = true;\n}\n/**\r\n * this makes requests with the bungie-api-ts functions and using the api key header\r\n */\nvar httpClient = generateHttpClient(fetch);\n/**\r\n * it may work without, but you should add an api key,\r\n * especially if you are in a browser and need proper CORS headers\r\n */\nexport function setApiKey(apiKey) {\n  httpClient = generateHttpClient(fetch, apiKey);\n}\n/**\r\n * stores the language we'll try to fetch from API or cache\r\n */\nexport var language = \"en\";\n/**\r\n * sets the language of the manifest to download.\r\n * note this doesn't re-trigger a download. you'll need to load() again.\r\n */\nexport function setLanguage(lang) {\n  language = lang;\n}\nvar includedTables = new Set();\nvar excludedTables = new Set();\n/**\r\n * add tables which should be downloaded and available for lookups.\r\n * if unset, we download all tables except for excludeTables.\r\n *\r\n * use only this or excludeTables, not both.\r\n */\nexport function includeTables(tables) {\n  if (excludedTables.size) throw \"cannot use both includeTables and excludeTables\";\n  var _iterator = _createForOfIteratorHelper(tables),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var t = _step.value;\n      includedTables.add(t);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n/**\r\n * if set, all available tables will be downloaded and available\r\n * for lookups, except those specified here.\r\n *\r\n * this completely overrides includeTables.\r\n * use only this or includeTables, not both.\r\n */\nexport function excludeTables(tables) {\n  if (includedTables.size) throw \"cannot use both includeTables and excludeTables\";\n  var _iterator2 = _createForOfIteratorHelper(tables),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var t = _step2.value;\n      excludedTables.add(t);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar manifestResponseCache;\nvar cacheTimestamp = 0;\nfunction fetchManifestMetadata() {\n  return _fetchManifestMetadata.apply(this, arguments);\n}\n/**\r\n * you could access this directly,\r\n * if you're no fun and don't like my convenience get() and getAll() functions\r\n *\r\n * it's the big old object with all manifest data in it\r\n */\nfunction _fetchManifestMetadata() {\n  _fetchManifestMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var now, newManifestResponse;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          now = Date.now(); // ignore the cache after a minute\n          if (!(manifestResponseCache && now - cacheTimestamp < 60000)) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\", manifestResponseCache);\n        case 3:\n          _context2.next = 5;\n          return getDestinyManifest(httpClient);\n        case 5:\n          newManifestResponse = _context2.sent.Response;\n          manifestResponseCache = newManifestResponse;\n          cacheTimestamp = now;\n          return _context2.abrupt(\"return\", newManifestResponse);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _fetchManifestMetadata.apply(this, arguments);\n}\nexport var allManifest;\nexport function setManifest(manifest) {\n  allManifest = manifest;\n}\n/**\r\n * the manifest version currently loaded in memory.\r\n * the version that you'll get information from if you `getDef()` an entry.\r\n *\r\n * this is in the form of `${manifestMetadata.version}__${language}`\r\n * (or the string \"nothing loaded yet\")\r\n */\nexport var loadedVersion = \"nothing loaded yet\";\n/**\r\n * don't use this directly.\r\n * `@d2api/manifest-node` and `@d2api/manifest-web` use this function.\r\n * why are you even in here. go use those.\r\n *\r\n * `loadDefs()` from the web or node version should automatically\r\n * deal with making sure we tried to get a cached version first,\r\n * loadedVersion is correct, etc.\r\n */\nexport function loadManifestFromApiWithoutCheckingCache() {\n  return _loadManifestFromApiWithoutCheckingCache.apply(this, arguments);\n}\nfunction _loadManifestFromApiWithoutCheckingCache() {\n  _loadManifestFromApiWithoutCheckingCache = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var cacheGetter,\n      forceUpdate,\n      manifestMetadata,\n      apiVersion,\n      tablesNeeded,\n      versionsMatch,\n      needsUpdate,\n      newManifest,\n      cacheHits,\n      reusedExisting,\n      downloaded,\n      _args4 = arguments;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          cacheGetter = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : function () {\n            return undefined;\n          };\n          forceUpdate = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n          _context4.next = 4;\n          return fetchManifestMetadata();\n        case 4:\n          manifestMetadata = _context4.sent;\n          apiVersion = \"\".concat(manifestMetadata.version, \"__\").concat(language);\n          !forceUpdate && vlog(\"version loaded in memory: \\\"\".concat(loadedVersion, \"\\\"\\nversion in API: \\\"\").concat(apiVersion, \"\\\"\"));\n          tablesNeeded = getNeededTables();\n          versionsMatch = loadedVersion === apiVersion;\n          needsUpdate = forceUpdate || !allManifest || !versionsMatch;\n          if (!needsUpdate) {\n            if (tablesNeeded.some(function (t) {\n              return !(t in allManifest);\n            })) {\n              vlog(\"but some requested tables aren't loaded yet\");\n              needsUpdate = true;\n            }\n          }\n          // we're done if everything is fine\n          if (needsUpdate) {\n            _context4.next = 14;\n            break;\n          }\n          vlog(\"loaded manifest is already up to date\");\n          return _context4.abrupt(\"return\");\n        case 14:\n          vlog(\"loading \".concat(tablesNeeded.length === allTableNames.length ? \"the entire manifest\" : \"\".concat(tablesNeeded.length, \" requested tables\")));\n          newManifest = {};\n          cacheHits = 0;\n          reusedExisting = 0;\n          downloaded = 0;\n          _context4.next = 21;\n          return Promise.all(tablesNeeded.map( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(tableName) {\n              var _a, _b, newTableData;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!forceUpdate) {\n                      _context3.next = 4;\n                      break;\n                    }\n                    newTableData = undefined;\n                    _context3.next = 13;\n                    break;\n                  case 4:\n                    if (!(versionsMatch && tableName in allManifest)) {\n                      _context3.next = 9;\n                      break;\n                    }\n                    newTableData = allManifest[tableName];\n                    reusedExisting++;\n                    _context3.next = 13;\n                    break;\n                  case 9:\n                    _context3.next = 11;\n                    return cacheGetter({\n                      version: manifestMetadata.version,\n                      tableName: tableName,\n                      language: language\n                    });\n                  case 11:\n                    newTableData = _context3.sent;\n                    if (newTableData) cacheHits++;\n                  case 13:\n                    if (!(!newTableData && ((_b = (_a = manifestMetadata.jsonWorldComponentContentPaths) === null || _a === void 0 ? void 0 : _a[language]) === null || _b === void 0 ? void 0 : _b[\"Destiny\".concat(tableName, \"Definition\")]))) {\n                      _context3.next = 18;\n                      break;\n                    }\n                    _context3.next = 16;\n                    return getDestinyManifestComponent(httpClient, {\n                      // remove this any when getDestinyManifestComponent is aware of invitemlite\n                      tableName: \"Destiny\".concat(tableName, \"Definition\"),\n                      language: language,\n                      destinyManifest: manifestMetadata\n                    });\n                  case 16:\n                    newTableData = _context3.sent;\n                    downloaded++;\n                  case 18:\n                    if (newTableData) newManifest[tableName] = newTableData;\n                  case 19:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n        case 21:\n          vlog(\"\".concat(downloaded, \" components downloaded / \").concat(cacheHits, \" loaded from cache / \").concat(reusedExisting, \" already in memory\"));\n          allManifest = newManifest;\n          loadedVersion = apiVersion;\n        case 24:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _loadManifestFromApiWithoutCheckingCache.apply(this, arguments);\n}\nexport function getDef(componentName, hash) {\n  if (!hash) return;\n  if (!allManifest) throw \"manifest accessed before being loaded\";\n  if (!(componentName in allManifest)) throw \"table [\".concat(componentName, \"] isn't available. did you exclude it with excludeTables, or forget to load it with includeTables?\");\n  // this used to work in types and now it doesn't. frustrating.\n  return allManifest[componentName][hash];\n}\n/**\r\n * returns an array of all the values in a manifest component,\r\n * such as DestinyActivityDefinition\r\n */\nexport function getAllDefs(componentName) {\n  if (!allManifest) throw \"manifest accessed before being loaded\";\n  if (!(componentName in allManifest)) throw \"table [\".concat(componentName, \"] isn't available. did you load it?\");\n  return Object.values(allManifest[componentName]);\n}\n/** returns a manifest component (a set of definitions keyed by hash number) */\nexport function getComponent(componentName) {\n  if (!allManifest) throw \"manifest accessed before being loaded\";\n  if (!(componentName in allManifest)) throw \"table [\".concat(componentName, \"] isn't available. did you load it?\");\n  return allManifest[componentName];\n}\nfunction generateHttpClient(fetchLike, apiKey) {\n  return /*#__PURE__*/function () {\n    var _httpClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config) {\n      var body, headers, res, fetched;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            body = config.body && JSON.stringify(config.body);\n            headers = {};\n            if (apiKey && config.url.includes(\"/Platform/\")) headers[\"X-API-Key\"] = apiKey;\n            _context.next = 5;\n            return fetchLike(config.url, _objectSpread(_objectSpread({}, config), {}, {\n              body: body,\n              headers: headers\n            }));\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n          case 8:\n            fetched = _context.sent;\n            if (!((fetched === null || fetched === void 0 ? void 0 : fetched.ErrorCode) !== undefined && (fetched === null || fetched === void 0 ? void 0 : fetched.ErrorCode) !== 1)) {\n              _context.next = 13;\n              break;\n            }\n            throw new Error(Object.entries(fetched).map(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n              return \"\".concat(key, \": \").concat(JSON.stringify(value));\n            }).join(\"\\n\"));\n          case 13:\n            return _context.abrupt(\"return\", fetched);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function httpClient(_x) {\n      return _httpClient.apply(this, arguments);\n    }\n    return httpClient;\n  }();\n}\nexport function vlog(str) {\n  isVerbose && console.log(str);\n}\n/**\r\n * compares between `.` or `-` separated manifest version numbers\r\n *\r\n * feed this into a sort() to get highest version first\r\n */\nexport function compareVersionNumbers(a, b) {\n  var a_ = a.split(/\\D+/).filter(Boolean);\n  var b_ = b.split(/\\D+/).filter(Boolean);\n  for (var i = 0; i < a_.length; i++) {\n    // sort highest to front\n    var comparison = Number(b_[i]) - Number(a_[i]);\n    if (comparison) return comparison;\n  }\n  return 0;\n}\nexport function getNeededTables() {\n  return excludedTables.size ? allTableNames.filter(function (tn) {\n    return !excludedTables.has(tn);\n  }) : includedTables.size ? Array.from(includedTables) : allTableNames;\n}","map":{"version":3,"names":["getDestinyManifest","allTableNames","getDestinyManifestComponent","emptyTables","defLanguages","isVerbose","verbose","httpClient","generateHttpClient","fetch","setApiKey","apiKey","language","setLanguage","lang","includedTables","Set","excludedTables","includeTables","tables","size","_iterator","_createForOfIteratorHelper","_step","s","n","done","t","value","add","err","e","f","excludeTables","_iterator2","_step2","manifestResponseCache","cacheTimestamp","fetchManifestMetadata","_fetchManifestMetadata","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","now","newManifestResponse","wrap","_callee2$","_context2","prev","next","Date","abrupt","sent","Response","stop","allManifest","setManifest","manifest","loadedVersion","loadManifestFromApiWithoutCheckingCache","_loadManifestFromApiWithoutCheckingCache","_callee4","cacheGetter","forceUpdate","manifestMetadata","apiVersion","tablesNeeded","versionsMatch","needsUpdate","newManifest","cacheHits","reusedExisting","downloaded","_args4","_callee4$","_context4","length","undefined","concat","version","vlog","getNeededTables","some","Promise","all","map","_ref3","_callee3","tableName","_a","_b","newTableData","_callee3$","_context3","jsonWorldComponentContentPaths","destinyManifest","_x2","getDef","componentName","hash","getAllDefs","Object","values","getComponent","fetchLike","_httpClient","_callee","config","body","headers","res","fetched","_callee$","_context","JSON","stringify","url","includes","_objectSpread","json","ErrorCode","Error","entries","_ref","_ref2","_slicedToArray","key","join","_x","str","console","log","compareVersionNumbers","a","b","a_","split","filter","Boolean","b_","i","comparison","Number","tn","has","Array","from"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/node_modules/@d2api/manifest/index.js"],"sourcesContent":["import { getDestinyManifest } from \"bungie-api-ts/destiny2\";\r\nimport { allTableNames } from \"./generated-data.js\";\r\nimport { getDestinyManifestComponent } from \"bungie-api-ts/destiny2\";\r\nexport * from \"./generated-funcs.js\";\r\nexport { emptyTables, defLanguages } from \"./generated-data.js\";\r\nexport let isVerbose = false;\r\n/**\r\n * run this if you love console logs\r\n */\r\nexport function verbose() {\r\n    isVerbose = true;\r\n}\r\n/**\r\n * this makes requests with the bungie-api-ts functions and using the api key header\r\n */\r\nlet httpClient = generateHttpClient(fetch);\r\n/**\r\n * it may work without, but you should add an api key,\r\n * especially if you are in a browser and need proper CORS headers\r\n */\r\nexport function setApiKey(apiKey) {\r\n    httpClient = generateHttpClient(fetch, apiKey);\r\n}\r\n/**\r\n * stores the language we'll try to fetch from API or cache\r\n */\r\nexport let language = \"en\";\r\n/**\r\n * sets the language of the manifest to download.\r\n * note this doesn't re-trigger a download. you'll need to load() again.\r\n */\r\nexport function setLanguage(lang) {\r\n    language = lang;\r\n}\r\nlet includedTables = new Set();\r\nlet excludedTables = new Set();\r\n/**\r\n * add tables which should be downloaded and available for lookups.\r\n * if unset, we download all tables except for excludeTables.\r\n *\r\n * use only this or excludeTables, not both.\r\n */\r\nexport function includeTables(tables) {\r\n    if (excludedTables.size)\r\n        throw \"cannot use both includeTables and excludeTables\";\r\n    for (const t of tables)\r\n        includedTables.add(t);\r\n}\r\n/**\r\n * if set, all available tables will be downloaded and available\r\n * for lookups, except those specified here.\r\n *\r\n * this completely overrides includeTables.\r\n * use only this or includeTables, not both.\r\n */\r\nexport function excludeTables(tables) {\r\n    if (includedTables.size)\r\n        throw \"cannot use both includeTables and excludeTables\";\r\n    for (const t of tables)\r\n        excludedTables.add(t);\r\n}\r\nlet manifestResponseCache;\r\nlet cacheTimestamp = 0;\r\nasync function fetchManifestMetadata() {\r\n    const now = Date.now();\r\n    // ignore the cache after a minute\r\n    if (manifestResponseCache && now - cacheTimestamp < 60000)\r\n        return manifestResponseCache;\r\n    const newManifestResponse = (await getDestinyManifest(httpClient)).Response;\r\n    manifestResponseCache = newManifestResponse;\r\n    cacheTimestamp = now;\r\n    return newManifestResponse;\r\n}\r\n/**\r\n * you could access this directly,\r\n * if you're no fun and don't like my convenience get() and getAll() functions\r\n *\r\n * it's the big old object with all manifest data in it\r\n */\r\nexport let allManifest;\r\nexport function setManifest(manifest) {\r\n    allManifest = manifest;\r\n}\r\n/**\r\n * the manifest version currently loaded in memory.\r\n * the version that you'll get information from if you `getDef()` an entry.\r\n *\r\n * this is in the form of `${manifestMetadata.version}__${language}`\r\n * (or the string \"nothing loaded yet\")\r\n */\r\nexport let loadedVersion = \"nothing loaded yet\";\r\n/**\r\n * don't use this directly.\r\n * `@d2api/manifest-node` and `@d2api/manifest-web` use this function.\r\n * why are you even in here. go use those.\r\n *\r\n * `loadDefs()` from the web or node version should automatically\r\n * deal with making sure we tried to get a cached version first,\r\n * loadedVersion is correct, etc.\r\n */\r\nexport async function loadManifestFromApiWithoutCheckingCache(\r\n// a function that tries to retrieve the cached version of a table/language.\r\n// by default, basically a noop/autofail\r\ncacheGetter = () => undefined, forceUpdate = false) {\r\n    const manifestMetadata = await fetchManifestMetadata();\r\n    const apiVersion = `${manifestMetadata.version}__${language}`;\r\n    !forceUpdate &&\r\n        vlog(`version loaded in memory: \"${loadedVersion}\"\nversion in API: \"${apiVersion}\"`);\r\n    const tablesNeeded = getNeededTables();\r\n    const versionsMatch = loadedVersion === apiVersion;\r\n    let needsUpdate = forceUpdate || !allManifest || !versionsMatch;\r\n    if (!needsUpdate) {\r\n        if (tablesNeeded.some((t) => !(t in allManifest))) {\r\n            vlog(\"but some requested tables aren't loaded yet\");\r\n            needsUpdate = true;\r\n        }\r\n    }\r\n    // we're done if everything is fine\r\n    if (!needsUpdate) {\r\n        vlog(\"loaded manifest is already up to date\");\r\n        return;\r\n    }\r\n    vlog(`loading ${tablesNeeded.length === allTableNames.length\r\n        ? \"the entire manifest\"\r\n        : `${tablesNeeded.length} requested tables`}`);\r\n    const newManifest = {};\r\n    let cacheHits = 0;\r\n    let reusedExisting = 0;\r\n    let downloaded = 0;\r\n    await Promise.all(tablesNeeded.map(async (tableName) => {\r\n        var _a, _b;\r\n        let newTableData;\r\n        // if forceUpdate, reuse nothing\r\n        if (forceUpdate) {\r\n            newTableData = undefined;\r\n        }\r\n        // if API version hasn't changed, and we already have this table loaded, use that\r\n        else if (versionsMatch && tableName in allManifest) {\r\n            newTableData = allManifest[tableName];\r\n            reusedExisting++;\r\n        }\r\n        // otherwise, check our caching method for a copy of this version\r\n        else {\r\n            newTableData = await cacheGetter({\r\n                version: manifestMetadata.version,\r\n                tableName,\r\n                language,\r\n            });\r\n            if (newTableData)\r\n                cacheHits++;\r\n        }\r\n        // fall back to doing an entire table download if none of the above got us what we need\r\n        if (!newTableData && ((_b = (_a = manifestMetadata.jsonWorldComponentContentPaths) === null || _a === void 0 ? void 0 : _a[language]) === null || _b === void 0 ? void 0 : _b[`Destiny${tableName}Definition`])) {\r\n            newTableData = await getDestinyManifestComponent(httpClient, {\r\n                // remove this any when getDestinyManifestComponent is aware of invitemlite\r\n                tableName: `Destiny${tableName}Definition`,\r\n                language,\r\n                destinyManifest: manifestMetadata,\r\n            });\r\n            downloaded++;\r\n        }\r\n        if (newTableData)\r\n            newManifest[tableName] = newTableData;\r\n    }));\r\n    vlog(`${downloaded} components downloaded / ${cacheHits} loaded from cache / ${reusedExisting} already in memory`);\r\n    allManifest = newManifest;\r\n    loadedVersion = apiVersion;\r\n}\r\nexport function getDef(componentName, hash) {\r\n    if (!hash)\r\n        return;\r\n    if (!allManifest)\r\n        throw \"manifest accessed before being loaded\";\r\n    if (!(componentName in allManifest))\r\n        throw `table [${componentName}] isn't available. did you exclude it with excludeTables, or forget to load it with includeTables?`;\r\n    // this used to work in types and now it doesn't. frustrating.\r\n    return allManifest[componentName][hash];\r\n}\r\n/**\r\n * returns an array of all the values in a manifest component,\r\n * such as DestinyActivityDefinition\r\n */\r\nexport function getAllDefs(componentName) {\r\n    if (!allManifest)\r\n        throw \"manifest accessed before being loaded\";\r\n    if (!(componentName in allManifest))\r\n        throw `table [${componentName}] isn't available. did you load it?`;\r\n    return Object.values(allManifest[componentName]);\r\n}\r\n/** returns a manifest component (a set of definitions keyed by hash number) */\r\nexport function getComponent(componentName) {\r\n    if (!allManifest)\r\n        throw \"manifest accessed before being loaded\";\r\n    if (!(componentName in allManifest))\r\n        throw `table [${componentName}] isn't available. did you load it?`;\r\n    return allManifest[componentName];\r\n}\r\nfunction generateHttpClient(fetchLike, apiKey) {\r\n    return async function httpClient(config) {\r\n        const body = config.body && JSON.stringify(config.body);\r\n        const headers = {};\r\n        if (apiKey && config.url.includes(\"/Platform/\"))\r\n            headers[\"X-API-Key\"] = apiKey;\r\n        const res = await fetchLike(config.url, {\r\n            ...config,\r\n            body,\r\n            headers,\r\n        });\r\n        const fetched = await res.json();\r\n        if ((fetched === null || fetched === void 0 ? void 0 : fetched.ErrorCode) !== undefined && (fetched === null || fetched === void 0 ? void 0 : fetched.ErrorCode) !== 1) {\r\n            throw new Error(Object.entries(fetched)\r\n                .map(([key, value]) => `${key}: ${JSON.stringify(value)}`)\r\n                .join(\"\\n\"));\r\n        }\r\n        else\r\n            return fetched;\r\n    };\r\n}\r\nexport function vlog(str) {\r\n    isVerbose && console.log(str);\r\n}\r\n/**\r\n * compares between `.` or `-` separated manifest version numbers\r\n *\r\n * feed this into a sort() to get highest version first\r\n */\r\nexport function compareVersionNumbers(a, b) {\r\n    const a_ = a.split(/\\D+/).filter(Boolean);\r\n    const b_ = b.split(/\\D+/).filter(Boolean);\r\n    for (var i = 0; i < a_.length; i++) {\r\n        // sort highest to front\r\n        let comparison = Number(b_[i]) - Number(a_[i]);\r\n        if (comparison)\r\n            return comparison;\r\n    }\r\n    return 0;\r\n}\r\nexport function getNeededTables() {\r\n    return excludedTables.size\r\n        ? allTableNames.filter((tn) => !excludedTables.has(tn))\r\n        : includedTables.size\r\n            ? Array.from(includedTables)\r\n            : allTableNames;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}