{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorla\\\\Documents\\\\d2rotations\\\\my-app\\\\src\\\\components\\\\LostSectorRotation.tsx\";\nimport React from \"react\";\n// import './styles/dashboard.css';\n\nimport { getActivityDef, getActivityModifierDef, getInventoryItemDef } from \"@d2api/manifest-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LostSectorRotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: {\n        currLostSectorName: \"\",\n        currLostSectorHashes: {\n          master: -1,\n          legend: -1\n        },\n        currReward: \"\"\n      }\n    };\n  }\n  getLostSectors() {\n    fetch(\"http://localhost:5000/api/lost_sector\").then(res => res.json()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n  componentDidMount() {\n    this.getLostSectors();\n  }\n  getRewards() {\n    const masterInfo = getActivityDef(this.state.apiResponse.currLostSectorHashes.master);\n    const legendInfo = getActivityDef(this.state.apiResponse.currLostSectorHashes.legend);\n\n    //get modifier info\n    if (masterInfo) {\n      const masterModifiers = masterInfo.modifiers.map(_ref => {\n        let {\n          activityModifierHash\n        } = _ref;\n        const modifierInfo = getActivityModifierDef(activityModifierHash);\n        return modifierInfo;\n      });\n      //filter hidden modifiers\n      const filteredMasterModifiers = masterModifiers.filter(mod => {\n        if (mod == undefined) return;\n        return mod.displayInNavMode && mod.displayProperties.name !== \"\";\n      });\n    } else {\n      console.log(\"master lost sector not found\");\n    }\n    if (legendInfo) {\n      const legendModifiers = legendInfo.modifiers.map(_ref2 => {\n        let {\n          activityModifierHash\n        } = _ref2;\n        const modifierInfo = getActivityModifierDef(activityModifierHash);\n        return modifierInfo;\n      });\n      if (legendModifiers) {\n        const filteredLegendModifiers = legendModifiers.filter(mod => {\n          if (mod == undefined) return;\n          return mod.displayInNavMode && mod.displayProperties.name !== \"\";\n        });\n      }\n    } else {\n      console.log(\"legend lost sector not found\");\n    }\n\n    //get reward info\n    const masterRewards = masterInfo.rewards.map(_ref3 => {\n      let {\n        rewardItems\n      } = _ref3;\n      const rewardInfo = getInventoryItemDef(rewardItems[0].itemHash);\n      return rewardInfo;\n    });\n    const legendRewards = legendInfo.rewards.map(_ref4 => {\n      let {\n        rewardItems\n      } = _ref4;\n      const rewardInfo = getInventoryItemDef(rewardItems[0].itemHash);\n      return rewardInfo;\n    });\n  }\n  render() {\n    if (this.state !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.apiResponse.currLostSectorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\nexport default LostSectorRotation;","map":{"version":3,"names":["React","getActivityDef","getActivityModifierDef","getInventoryItemDef","jsxDEV","_jsxDEV","LostSectorRotation","Component","constructor","props","state","apiResponse","currLostSectorName","currLostSectorHashes","master","legend","currReward","getLostSectors","fetch","then","res","json","setState","componentDidMount","getRewards","masterInfo","legendInfo","masterModifiers","modifiers","map","_ref","activityModifierHash","modifierInfo","filteredMasterModifiers","filter","mod","undefined","displayInNavMode","displayProperties","name","console","log","legendModifiers","_ref2","filteredLegendModifiers","masterRewards","rewards","_ref3","rewardItems","rewardInfo","itemHash","legendRewards","_ref4","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/src/components/LostSectorRotation.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\n// import './styles/dashboard.css';\r\nimport { lostSectorType } from \"../typeDefinitions/lostSectors\";\r\nimport { getActivityDef, getActivityModifierDef, getInventoryItemDef } from \"@d2api/manifest-web\";\r\n\r\ntype MyProps = {};\r\n\r\ntype MyState = {\r\n\tapiResponse: lostSectorType;\r\n};\r\n\r\nclass LostSectorRotation extends React.Component<MyProps, MyState> {\r\n\tconstructor(props: MyProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { apiResponse: {\r\n            currLostSectorName: \"\",\r\n            currLostSectorHashes: {master: -1, legend: -1},\r\n            currReward: \"\"} \r\n        };\r\n\t}\r\n\r\n\tgetLostSectors() {\r\n\t\tfetch(\"http://localhost:5000/api/lost_sector\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => this.setState({ apiResponse: res }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getLostSectors();\r\n\t}\r\n\r\n    getRewards() {\r\n        const masterInfo = getActivityDef(this.state.apiResponse.currLostSectorHashes.master);\r\n        const legendInfo = getActivityDef(this.state.apiResponse.currLostSectorHashes.legend);\r\n\r\n        //get modifier info\r\n        if (masterInfo) {\r\n            const masterModifiers = masterInfo.modifiers.map(({activityModifierHash}) => {\r\n                const modifierInfo = getActivityModifierDef(activityModifierHash);\r\n                return modifierInfo;\r\n            });\r\n             //filter hidden modifiers\r\n            const filteredMasterModifiers = masterModifiers.filter(mod => {\r\n                if (mod == undefined) return;\r\n                return (mod.displayInNavMode && mod.displayProperties.name !== \"\");\r\n            });\r\n        } else {\r\n            console.log(\"master lost sector not found\");\r\n        }\r\n        if (legendInfo) {\r\n            const legendModifiers = legendInfo.modifiers.map(({activityModifierHash}) => {\r\n                const modifierInfo = getActivityModifierDef(activityModifierHash);\r\n                return modifierInfo;\r\n            });\r\n\r\n            if (legendModifiers) {\r\n                const filteredLegendModifiers = legendModifiers.filter(mod => {\r\n                    if (mod == undefined) return;\r\n                    return (mod.displayInNavMode && mod.displayProperties.name !== \"\");\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"legend lost sector not found\");\r\n        }\r\n\r\n        //get reward info\r\n        const masterRewards = masterInfo.rewards.map(({rewardItems}) => {\r\n            const rewardInfo = getInventoryItemDef(rewardItems[0].itemHash);\r\n            return rewardInfo;\r\n        });\r\n\r\n        const legendRewards = legendInfo.rewards.map(({rewardItems}) => {\r\n            const rewardInfo = getInventoryItemDef(rewardItems[0].itemHash);\r\n            return rewardInfo;\r\n        });\r\n    }\r\n\r\n\trender() {\r\n\t\tif (this.state !== null) {\r\n\t\t\treturn <div>{this.state.apiResponse.currLostSectorName}</div>;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default LostSectorRotation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC;;AAEA,SAASC,cAAc,EAAEC,sBAAsB,EAAEC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlG,MAAMC,kBAAkB,SAASN,KAAK,CAACO,SAAS,CAAmB;EAClEC,WAAWA,CAACC,KAAc,EAAE;IAC3B,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,WAAW,EAAE;QAClBC,kBAAkB,EAAE,EAAE;QACtBC,oBAAoB,EAAE;UAACC,MAAM,EAAE,CAAC,CAAC;UAAEC,MAAM,EAAE,CAAC;QAAC,CAAC;QAC9CC,UAAU,EAAE;MAAE;IAClB,CAAC;EACR;EAEAC,cAAcA,CAAA,EAAG;IAChBC,KAAK,CAAC,uCAAuC,CAAC,CAC5CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAI,IAAI,CAACE,QAAQ,CAAC;MAAEX,WAAW,EAAES;IAAI,CAAC,CAAC,CAAC;EACnD;EAEAG,iBAAiBA,CAAA,EAAG;IACnB,IAAI,CAACN,cAAc,EAAE;EACtB;EAEGO,UAAUA,CAAA,EAAG;IACT,MAAMC,UAAU,GAAGxB,cAAc,CAAC,IAAI,CAACS,KAAK,CAACC,WAAW,CAACE,oBAAoB,CAACC,MAAM,CAAC;IACrF,MAAMY,UAAU,GAAGzB,cAAc,CAAC,IAAI,CAACS,KAAK,CAACC,WAAW,CAACE,oBAAoB,CAACE,MAAM,CAAC;;IAErF;IACA,IAAIU,UAAU,EAAE;MACZ,MAAME,eAAe,GAAGF,UAAU,CAACG,SAAS,CAACC,GAAG,CAACC,IAAA,IAA4B;QAAA,IAA3B;UAACC;QAAoB,CAAC,GAAAD,IAAA;QACpE,MAAME,YAAY,GAAG9B,sBAAsB,CAAC6B,oBAAoB,CAAC;QACjE,OAAOC,YAAY;MACvB,CAAC,CAAC;MACD;MACD,MAAMC,uBAAuB,GAAGN,eAAe,CAACO,MAAM,CAACC,GAAG,IAAI;QAC1D,IAAIA,GAAG,IAAIC,SAAS,EAAE;QACtB,OAAQD,GAAG,CAACE,gBAAgB,IAAIF,GAAG,CAACG,iBAAiB,CAACC,IAAI,KAAK,EAAE;MACrE,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C;IACA,IAAIf,UAAU,EAAE;MACZ,MAAMgB,eAAe,GAAGhB,UAAU,CAACE,SAAS,CAACC,GAAG,CAACc,KAAA,IAA4B;QAAA,IAA3B;UAACZ;QAAoB,CAAC,GAAAY,KAAA;QACpE,MAAMX,YAAY,GAAG9B,sBAAsB,CAAC6B,oBAAoB,CAAC;QACjE,OAAOC,YAAY;MACvB,CAAC,CAAC;MAEF,IAAIU,eAAe,EAAE;QACjB,MAAME,uBAAuB,GAAGF,eAAe,CAACR,MAAM,CAACC,GAAG,IAAI;UAC1D,IAAIA,GAAG,IAAIC,SAAS,EAAE;UACtB,OAAQD,GAAG,CAACE,gBAAgB,IAAIF,GAAG,CAACG,iBAAiB,CAACC,IAAI,KAAK,EAAE;QACrE,CAAC,CAAC;MACN;IACJ,CAAC,MAAM;MACHC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C;;IAEA;IACA,MAAMI,aAAa,GAAGpB,UAAU,CAACqB,OAAO,CAACjB,GAAG,CAACkB,KAAA,IAAmB;MAAA,IAAlB;QAACC;MAAW,CAAC,GAAAD,KAAA;MACvD,MAAME,UAAU,GAAG9C,mBAAmB,CAAC6C,WAAW,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC;MAC/D,OAAOD,UAAU;IACrB,CAAC,CAAC;IAEF,MAAME,aAAa,GAAGzB,UAAU,CAACoB,OAAO,CAACjB,GAAG,CAACuB,KAAA,IAAmB;MAAA,IAAlB;QAACJ;MAAW,CAAC,GAAAI,KAAA;MACvD,MAAMH,UAAU,GAAG9C,mBAAmB,CAAC6C,WAAW,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC;MAC/D,OAAOD,UAAU;IACrB,CAAC,CAAC;EACN;EAEHI,MAAMA,CAAA,EAAG;IACR,IAAI,IAAI,CAAC3C,KAAK,KAAK,IAAI,EAAE;MACxB,oBAAOL,OAAA;QAAAiD,QAAA,EAAM,IAAI,CAAC5C,KAAK,CAACC,WAAW,CAACC;MAAkB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAC9D;EACD;AACD;AAEA,eAAepD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}