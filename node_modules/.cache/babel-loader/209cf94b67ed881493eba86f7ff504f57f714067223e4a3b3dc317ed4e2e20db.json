{"ast":null,"code":"import { verbose, setApiKey, loadDefs, includeTables } from '@d2api/manifest-web';\nconst keys = require(\"../config/keys.json\");\nconst neededManifestDefs = require(\"../data/neededManifestDefs.json\");\nverbose(); // make the client chatty. if you want.\nsetApiKey(keys.apiKey);\nincludeTables(neededManifestDefs.tablesNeeded);\nexport async function manifestLoader() {\n  // checks the API for the current version.\n  // loads our cached copy if it's up to date, or downloads a new one from bungie\n  await loadDefs();\n\n  // const kindledOrchid = getInventoryItemDef(2575506895);\n  // console.log('item ' + kindledOrchid?.displayProperties.name);\n}","map":{"version":3,"names":["verbose","setApiKey","loadDefs","includeTables","keys","require","neededManifestDefs","apiKey","tablesNeeded","manifestLoader"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/src/services/manifestChecker.tsx"],"sourcesContent":["import { verbose, setApiKey, loadDefs, getInventoryItemDef, includeTables } from '@d2api/manifest-web';\r\n\r\nconst keys = require(\"../config/keys.json\");\r\nconst neededManifestDefs = require(\"../data/neededManifestDefs.json\");\r\n\r\nverbose(); // make the client chatty. if you want.\r\nsetApiKey(keys.apiKey);\r\nincludeTables(neededManifestDefs.tablesNeeded);\r\n\r\nexport async function manifestLoader() {\r\n  // checks the API for the current version.\r\n  // loads our cached copy if it's up to date, or downloads a new one from bungie\r\n  await loadDefs();\r\n  \r\n  // const kindledOrchid = getInventoryItemDef(2575506895);\r\n  // console.log('item ' + kindledOrchid?.displayProperties.name);\r\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAuBC,aAAa,QAAQ,qBAAqB;AAEtG,MAAMC,IAAI,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC3C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAErEL,OAAO,EAAE,CAAC,CAAC;AACXC,SAAS,CAACG,IAAI,CAACG,MAAM,CAAC;AACtBJ,aAAa,CAACG,kBAAkB,CAACE,YAAY,CAAC;AAE9C,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC;EACA;EACA,MAAMP,QAAQ,EAAE;;EAEhB;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}