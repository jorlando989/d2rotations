{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorla\\\\Documents\\\\d2rotations\\\\my-app\\\\src\\\\components\\\\Wellspring.tsx\";\nimport React from \"react\";\nimport \"./styles/component.css\";\nimport { getInventoryItemDef, getActivityDef } from \"@d2api/manifest-web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Wellspring extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: {\n        bossName: \"\",\n        activityHash: -1,\n        weaponHash: -1\n      }\n    };\n  }\n  getWellspringRotation() {\n    fetch(\"http://localhost:5000/api/wellspring\").then(res => res.json()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n  componentDidMount() {\n    this.getWellspringRotation();\n  }\n  getInfo(wellspringInfo) {\n    const activityInfo = getActivityDef(wellspringInfo.activityHash);\n    if (activityInfo == undefined) {\n      return;\n    }\n    const rewardInfo = getInventoryItemDef(wellspringInfo.weaponHash);\n    if (rewardInfo == undefined) {\n      return;\n    }\n    const activityRewards = activityInfo.rewards.flatMap(_ref => {\n      let {\n        rewardItems\n      } = _ref;\n      const rewards = rewardItems.filter(reward => {\n        return reward !== undefined;\n      }).map(reward => {\n        const rewardData = getInventoryItemDef(reward.itemHash);\n        return rewardData;\n      });\n      return rewards;\n    });\n    return {\n      activityInfo,\n      rewardInfo,\n      activityRewards\n    };\n  }\n  renderRewards(wellspringInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-in-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://www.bungie.net${wellspringInfo.rewardInfo.displayProperties.icon}`,\n        className: \"rewardIcon\",\n        alt: \"wellspring reward icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: wellspringInfo.rewardInfo.displayProperties.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, wellspringInfo.rewardInfo.hash, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    if (this.state !== null && this.state.apiResponse.bossName !== \"\") {\n      const wellspringInfo = this.getInfo(this.state.apiResponse);\n      if (wellspringInfo == undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"error loading Wellspring reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-teal itemCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: wellspringInfo.activityInfo.displayProperties.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: wellspringInfo.activityInfo.displayProperties.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), this.renderRewards(wellspringInfo)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this);\n    }\n  }\n}\nexport default Wellspring;","map":{"version":3,"names":["React","getInventoryItemDef","getActivityDef","jsxDEV","_jsxDEV","Wellspring","Component","constructor","props","state","apiResponse","bossName","activityHash","weaponHash","getWellspringRotation","fetch","then","res","json","setState","componentDidMount","getInfo","wellspringInfo","activityInfo","undefined","rewardInfo","activityRewards","rewards","flatMap","_ref","rewardItems","filter","reward","map","rewardData","itemHash","renderRewards","className","children","src","displayProperties","icon","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","hash","render","description"],"sources":["C:/Users/jorla/Documents/d2rotations/my-app/src/components/Wellspring.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles/component.css\";\r\nimport { getInventoryItemDef, getActivityDef } from \"@d2api/manifest-web\";\r\nimport { DestinyActivityDefinition, DestinyInventoryItemDefinition } from \"bungie-api-ts/destiny2\";\r\n\r\ntype wellspringResponse = {\r\n\tbossName: string,\r\n    activityHash: number,\r\n    weaponHash: number\r\n};\r\n\r\ntype wellspringInfoType = {\r\n    activityInfo: DestinyActivityDefinition,\r\n    rewardInfo: DestinyInventoryItemDefinition,\r\n    activityRewards: DestinyInventoryItemDefinition[]\r\n};\r\n\r\ntype MyProps = {};\r\n\r\ntype MyState = {\r\n\tapiResponse: wellspringResponse;\r\n};\r\n\r\nclass Wellspring extends React.Component<MyProps, MyState> {\r\n\tconstructor(props: MyProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tapiResponse: {\r\n\t\t\t\tbossName: \"\",\r\n                activityHash: -1,\r\n                weaponHash: -1\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tgetWellspringRotation() {\r\n\t\tfetch(\"http://localhost:5000/api/wellspring\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => this.setState({ apiResponse: res }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getWellspringRotation();\r\n\t}\r\n\r\n    getInfo(wellspringInfo: wellspringResponse) {\r\n\t\tconst activityInfo = getActivityDef(wellspringInfo.activityHash);\r\n        if (activityInfo == undefined) {\r\n            return;\r\n        }\r\n\t\tconst rewardInfo = getInventoryItemDef(wellspringInfo.weaponHash);\r\n        if (rewardInfo == undefined) {\r\n            return;\r\n        }\r\n\r\n\t\tconst activityRewards = activityInfo.rewards.flatMap(({rewardItems}) => {\r\n\t\t\tconst rewards = rewardItems.filter(reward => {\r\n                return reward !== undefined;\r\n            }).map(reward => {\r\n\t\t\t\tconst rewardData = getInventoryItemDef(reward.itemHash)!;\r\n\t\t\t\treturn rewardData;\r\n\t\t\t});\r\n\t\t\treturn rewards;\r\n\t\t});\r\n        return {\r\n            activityInfo,\r\n            rewardInfo,\r\n            activityRewards\r\n        };\r\n    }\r\n\r\n    renderRewards(wellspringInfo: wellspringInfoType) {\r\n        return (\r\n            <div className=\"display-in-row\" key={wellspringInfo.rewardInfo.hash}>\r\n                <img src={`https://www.bungie.net${wellspringInfo.rewardInfo.displayProperties.icon}`} className=\"rewardIcon\" alt=\"wellspring reward icon\"/>\r\n                <div>{wellspringInfo.rewardInfo.displayProperties.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\trender() {\r\n\t\tif (this.state !== null && this.state.apiResponse.bossName !== \"\") {\r\n            const wellspringInfo: wellspringInfoType | undefined = this.getInfo(this.state.apiResponse);\r\n            if (wellspringInfo == undefined) return (\r\n                <div>error loading Wellspring reward</div>\r\n            );\r\n\t\t\treturn (\r\n\t\t\t\t<div className='bg-teal itemCard'>\r\n\t\t\t\t\t<div>\r\n                        <h3>\r\n                            {wellspringInfo.activityInfo.displayProperties.name}\r\n                        </h3>\r\n                        <div>\r\n                            {wellspringInfo.activityInfo.displayProperties.description}\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    {this.renderRewards(wellspringInfo)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Wellspring;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}